#!/bin/bash
#
# Add a new site with support for php

# Ensure running as root
if [ "$(id -u)" -ne 0 ]; then
    echo 'This script is designed to run as root'
    exit
fi

# Check arguments
if [ $# -lt 2 ]; then
    echo 'Syntax: add-php <site-name> <domain>'
    exit
fi

# Determine site information. Separate domain name and port from second argument.
SITENAME=$1
SITEDOMAIN=$2

# Check number of dots in domain and use if we should add a www subdomain
DOTCOUNT=$(awk -F. '{print NF-1}' <<<"$SITEDOMAIN")
SERVERNAME=$SITEDOMAIN
if [ $DOTCOUNT -le 1 ]; then
    SERVERNAME="$SERVERNAME www.$SITEDOMAIN"
fi

# Determine site directory and user
DESTDIR=/var/www/$1
SITE_USER='www-data'
SITE_GROUP='www-data'
RUN_AS_USER='www-data'
SOCKET_PATH='/var/run/php/php7.2-fpm.sock'

# Create destination directories
sub_dirs=(wwwroot logs)
for subdir in "${sub_dirs[@]}"; do
    if [ ! -d "$DESTDIR/$subdir" ]; then
        mkdir -p "$DESTDIR/$subdir"
    fi
done

# Create nginx configuration
# Rename any existing file before creating the new one
if [ -f /etc/nginx/sites-available/$SITENAME.conf ]; then
    mv /etc/nginx/sites-available/$SITENAME.conf /etc/nginx/sites-available/$SITENAME.conf.old
fi
tee /etc/nginx/sites-available/$SITENAME.conf > /dev/null << EOF
server {
    listen 80;
    server_name $SERVERNAME;
    access_log $DESTDIR/logs/access.log;
    error_log $DESTDIR/logs/error.log;
    root $DESTDIR/wwwroot;
    index index.php index.html;

    location / {
        try_files \$uri \$uri/ /index.php$is_args$args;
    }

    location ~ .php\$ {
        fastcgi_pass unix:$SOCKET_PATH;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $DESTDIR/wwwroot\$fastcgi_script_name;
        fastcgi_param SITE_NAME "$SITENAME";
        include fastcgi_params;
    }
}
EOF
ln -sf /etc/nginx/sites-available/$SITENAME.conf /etc/nginx/sites-enabled/$SITENAME.conf

# Set permissions for configuration file
chmod 0660 /etc/nginx/sites/$1.conf

# Copy template files
cp -R "$(dirname $0)/php-template/." "$DESTDIR/wwwroot"

# Set permissions
chown -R $SITE_USER:$SITE_GROUP $DESTDIR
chmod -R 0770 $DESTDIR
find $DESTDIR -type d -exec chmod 2770 {} \;
setfacl -d -m u::rwx $DESTDIR
setfacl -d -m g::rwx $DESTDIR
setfacl -d -m o::--- $DESTDIR

# Check that nginx is happy with configuration
nginx -t
if [ $? -ne 0 ]; then
    echo 'Nginx reported error in configuration'
    exit
fi
nginx -s reload

# Create Letsencrypt certificate
if [ $DOTCOUNT -le 1 ]; then
    certbot certonly --nginx -d $SITEDOMAIN -d www.$SITEDOMAIN
else
    certbot certonly --nginx -d $SITEDOMAIN
fi
sed -ri "s/listen 80/listen 443 ssl;\n\
    ssl_certificate /etc/letsencrypt/live/$SITEDOMAIN/fullchain.pem;\n\
    ssl_certificate_key /etc/letsencrypt/live/$SITEDOMAIN/privkey.pem;\n\
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem/" /etc/nginx/sites-available/$SITENAME.conf
tee >> /etc/nginx/sites-available/$SITENAME.conf <<EOF
server {
    if (\$host = $SITEDOMAIN) {
        return 301 https://\$host\$request_uri;
    }
    listen 80;
    server_name $SITEDOMAIN;
    return 404;
}
EOF
echo "Created Php site $1 successfully at $DESTDIR"

